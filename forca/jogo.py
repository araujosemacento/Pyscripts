# -*- coding: utf-8 -*-

import json
import random

partida = "em andamento"
tentativas = 7
inputs = []


def escolherPalavra():
    opcoes = json.load(open("./temas.json", encoding="utf-8"))
    tema = random.choice(list(opcoes["temas"].keys()))
    return [tema, random.choice(opcoes["temas"][tema])]


def desenharHominho(tentativas, partida):
    match tentativas:
        case 7:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |
                |
                |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 6:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |
                |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 5:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |       |
                |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 4:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |      /|
                |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 3:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |      /|\\
                |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 2:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |      /|\\
                |       |
                |
           \033[4m     |     \033[0m
                  """
            )
        case 1:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |      /|\\
                |       |
                |      /
           \033[4m     |     \033[0m
                  """
            )
        case 0:
            print(
                """
                 \033[4m       \033[0m
                |       |
                |       o
                |      /|\\
                |       |
                |      / \\
           \033[4m     |     \033[0m
                  """
            )
    if partida == "perdida":
        print(
            """
  ‚°ê‚†â‚†â‚†â‚£ë‚†Ç‚†í‚†ä‚†â‚†∂‚°Ñ‚†à‚†â‚†ì‚†â‚†â‚†Å‚†Å‚¢†‚†ñ‚†¶‚°â‚†ê‚†í‚†í‚†ä‚†í‚†ê‚¢í‚†¢
  ‚°Ñ‚¢Ç‚°Å‚†∏‚†±‚†â‚°Ä‚£Å‚£∞‚£ü‚†Å‚†Ä‚†ê‚°Ä‚¢à‚†ê‚¢à‚†Å‚†à‚†ò‚£Ü‚†Ä‚†ê‚†à‚¢Ä‚†Ä‚†ª‚†£‚†Ä‚¢Ä
  ‚†ê‚°Ñ‚£Å‚£ê‚£§‚£≤‚£¥‚£ø‚£≠‚£à‚°ô‚†≤‚£Ñ‚†Ä‚†Ç‚¢à‚†Ä‚£†‚°∂‚¢õ‚£ô‚£ø‚£¶‚£•‚£Ç‚£å‚£ê‚£Ä‚°å‚°é
  ‚£æ‚†ù‚£©‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ø‚£¶‚†à‚¢≥‚°Ä‚¢†‚°æ‚££‚£∂‚£ø‚£ø‚£ø‚£ø‚£ª‚£ø‚£ø‚£ç‚†â‚¢¶‚°Å
  ‚°ü‚¢∞‚£ø‚£Ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢®‚£ø‚£ø‚£∑‚†Ä‚¢ø‚£ü‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚†â‚¢π‚£Ø‚£ø‚£ß‚†Ä‚¢ª
  ‚°á‚¢æ‚°ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£ø‚°á‚¢∏‚°á‚£ø‚°ü‚£æ‚£ø‚£ø‚£ø‚£ø‚£∂‚£ø‚£ø‚£û‚£ø‚†Ä‚¢∏
  ‚°á‚¢ª‚£∑‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£π‚°ø‚¢Ä‚£ø‚°Ü‚¢ø‚£ø‚¢Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ª‚°ø‚†Ä‚£º
  ‚£ø‚£Ä‚†ª‚£ø‚£ç‚£ü‚°ø‚¢ø‚£ü‚£õ‚£æ‚†ü‚£°‚£æ‚†è‚£∑‚°ò‚†ø‚£∑‚£õ‚†ø‚°ø‚†ø‚¢ø‚£ª‚£º‚°ø‚†Å‚£¥‚†ü
  ‚†à‚¢ª‚£¶‚£•‚£ã‚°õ‚¢ü‚†ª‚¢õ‚£ã‚£•‚°º‚°ü‚£º‚°É‚°ø‚£π‚¢¶‚£ç‚°õ‚†ø‚†ø‚†ø‚†ø‚¢õ‚£°‚£§‚†ü‚£ø‚†à
  ‚†Ä‚¢∏‚°Ø‚£ù‚¢ª‚¢≥‚†æ‚†∂‚£æ‚¢ü‚°è‚¢á‚°±‚£ª‚°á‚£ß‚†â‚†û‚°ª‚†∑‚†∂‚£∂‚†∂‚¢∂‚†û‚°õ‚†©‚£∞‚°ü‚†Ä
  ‚†Ä‚¢∏‚†á‚†à‚¢É‚†ä‚†Å‚†É‚†Ç‚¢à‚†ê‚††‚£ú‚£ø‚°Ä‚¢ø‚°Ä‚†ê‚¢Ä‚†â‚†ë‚£∏‚¢ø‚°å‚†ê‚†à‚†Ä‚¢ø‚°Å‚†Ä
  ‚†Ä‚¢∏‚°á‚†à‚†à‚†É‚†ê‚†Ä‚¢Ç‚†Ä‚¢§‚°ø‚†Ω‚£ø‚†Ä‚°ø‚†π‚£Ü‚†Ä‚††‚¢±‚†è‚£û‚¢ª‚°Ñ‚£û‚¢Ä‚†è‚†Ä‚†Ä
  ‚†Ä‚¢Ä‚£ø‚°Ñ‚†∞‚°∂‚£¨‚°ê‚†Ä‚£†‚°ü‚°†‚¢ô‚£ø‚†Ä‚°Ω‚†Ä‚°∏‚¢¶‚†Ñ‚£ø‚†ò‚£æ‚£§‚†á‚†à‚°û‚°Ä‚†Ä‚†Ä
  ‚¢Ä‚°û‚†à‚¢ß‚£§‚£¨‚£•‚£Ñ‚£Ä‚£ª‚¢æ‚£•‚£é‚£ø‚†Ä‚¢º‚£Ä‚£õ‚£è‚£§‚£≠‚£≥‚£û‚£â‚£Ä‚£Ä‚†á‚¢∏‚†Ä‚†Ä
  ‚†Ä‚†õ‚¢æ‚¢ø‚£Ñ‚£Ä‚£§‚£Ä‚£â‚£â‚†≥‚¢§‚£û‚°ó‚†Ä‚¢æ‚†ô‚£≠‚†ñ‚†ã‚†Ä‚†Å‚†â‚†â‚†â‚£ø‚£∂‚†Ç‚†Å‚†Ä
  ‚†Ä‚¢Ä‚£æ‚¢Ω‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚£∫‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ß‚£ø‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚£º‚¢´‚£ø‚£û‚£∑‚£Ø‚£ü‚£æ‚£Ω‚£æ‚£Ω‚£ø‚£∂‚£ø‚£Ø‚£ü‚£æ‚£≥‚£Ø‚£ø‚£Ω‚£≥‚£Ø‚£ü‚£ø‚†Ä‚†Ä‚†Ä
  ‚†Ä‚†Ä‚°ù‚£†‚¢õ‚°ü‚†Ø‚°ø‚£ü‚£Ø‚£ü‚£∑‚†è‚†â‚†â‚†â‚†â‚¢ª‚°ø‚£ü‚£Ø‚£ü‚¢ø‚¢è‚°ü‚¢§‚£ª

Seu monstro! Voc√™ o deixou morrer üò≠

"""
        )
    elif partida == "ganha":
        print(
            """
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚°ø‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚°∂‚†∂‚¢ñ‚†¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†ã‚†â‚†â‚†õ‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ü‚†Å‚†Ä‚†Ä‚¢Ä‚†á‚†à‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚†§‚†§‚†§‚†§‚†§‚†§‚†§‚¢å‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Å‚£†‚†§‚†í‚£ã‚°≠‚†§‚†í‚†í‚†â‚†â‚°©‚¢ü‚££‚£§‚£Ä‚°¢‚£¨‚£â‚†í‚†§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢º‚†à‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ñ‚£â‚†¥‚†í‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£û‚£¥‚†ü‚†ã‚†â‚†õ‚¢ø‚£æ‚£é‚†ë‚¢§‚°Ä‚†ô‚†¢‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚¢ã‚°§‚¢ä‚£Å‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£û‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚°Ñ‚†Ä‚†±‚°Ñ‚†Ä‚†à‚†ë‚£Ñ‚†Ä‚†Ä‚¢Ä‚£†‚£Ω‚†∂‚†∂‚†∂‚†í‚†í‚†í‚†õ‚¢§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ã‚°¥‚¢ã‚¢î‚£≠‚£¥‚£ø‚£∑‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚£Ω‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£á‚†Ä‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚†à‚¢≥‚£∂‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ø‚†ª‚£¶‚°Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ú‚¢°‚†é‚¢†‚¢Ø‚£ø‚†ã‚†Å‚†Ä‚†à‚†ª‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚†ê‚¢∑‚¢∂‚£Ñ‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†ê‚†Å‚†Ä‚†Ä‚¢∞‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†™‚†ô‚£Ü‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°û‚¢†‚†É‚†Ä‚£Æ‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£á‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚¢Ä‚†Ä‚£∏‚£∑‚£ª‚°Ñ‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£è‚†ì‚†í‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚¢†‚†ñ‚†Ä‚†Ä‚†Ä‚†ò‚°Ñ
‚†Ä‚†Ä‚£Ä‚£†‚£§‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚¢Ä‚†á‚†Ä‚¢∞‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†∂‚£∂‚°Ñ‚¢π‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚£æ‚¢π‚£ø‚£ø‚£è‚°á‚†Ä‚£ø‚†Ä‚†Ä‚£Ä‚£§‚°§‚†§‚£º‚£∂‚†ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£†‚¢æ‚†ã‚†Ä‚†Ä‚†à‚†ª‚°∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Å‚†∏‚†Ä‚†Ä‚†∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£Ñ‚£Ä‚£∑‚£Ω‚£∏‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚†Ä‚†∏‚£û‚£ø‚£Ö‚£Ω‚†Å‚¢Ä‚£á‚£¥‚†û‚†ã‚†Å‚†Ä‚£º‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°á‚†ò‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£á‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†Ä‚†ô‚†ß‚†Ω‚†É‚†Ä‚°º‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ø‚†¶‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£π‚£§‚£§‚£§‚£§‚£Ñ‚°á‚†Ä‚†∞‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°Ω‚†ø‚£æ‚¢π‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†Å‚†Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†ò‚¢ß‚°Ä‚£†‚£§‚°∂‚†ñ‚†õ‚†õ‚†õ‚†í‚†í‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä
‚†Ä‚†â‚†≥‚£Ñ‚†Ä‚¢Ä‚°§‚°∫‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ª‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°Ü‚†Ä‚†Ä‚†Ä‚†à‚†ª‚†ü‚¢Å‚°é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†¶‚£Ñ‚£Ä‚£§‚†ü‚†Ä‚†Ä‚†â‚£Ä‚£Ä‚£Ä‚°â‚†Ç‚†Ä‚†Ä‚£Ω‚£è‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°û‚†Ä
‚†Ä‚†Ä‚†Ä‚¢à‚£∑‚†ã‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢à‚£©‚£§‚£º‚£ß‚£§‚°Ä‚†Ä‚†Ä‚†ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ã‚†Ä‚†Ä‚£à‚£≠‚†µ‚†í‚†ã‚†â‚†Ç‚†Ä‚†Ä‚†π‚°å‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£æ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚†û‚†â‚†â‚†Ä‚†Ä‚†Ä‚†à‚£ª‚°Ü‚†Ä‚£Ä‚£ô‚°¶‚†§‚£Ä‚£§‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†¥‚†ã‚£°‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≤‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚†¥‚†ã‚†Å‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°∂‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚°ß‚†ã‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†¥‚†ö‚†â‚†Ä‚¢Ä‚£¥‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†Å‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†â‚†ë‚¢è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†∂‚†∂‚†æ‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£§‚£§‚£§‚°§‚†í‚†í‚†â‚†Å‚†Ä‚†Ä‚£Ä‚£§‚£∂‚†ø‚¢ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°∂‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†à‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†á‚†Ä‚†Ä‚¢Ä‚°§‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†ê‚†Å‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£∂‚£æ‚†ø‚£ø‚°ü‚†Å‚†Ä‚£º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚£†‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚£†‚†è‚†Ä‚†Ä‚£∞‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†û‚¢Å‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†≥‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚†Å‚†ä‚†Ä‚†Ä‚¢Ä‚°∞‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†¶‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°†‚†ñ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†¢‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢ø‚£á‚£Ä‚£Ä‚£†‚†¥‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†§‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†í‚†í‚†ö‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†í‚†§‚¢§‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°†‚†§‚†ñ‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä

                          Obrigado por me salvar! :D
                          Tamo junto, meu confrade.
                            
                            """
        )


def checagem(tentativas, letra, inputs, palavra, statusDaPalavra):
    letra_minuscula = letra.lower()
    palavra_minuscula = palavra.lower()
    letras_variantes = {
        "a": ["√°", "√£", "√¢", "√§", "√†"],
        "e": ["√©", "√™", "√´"],
        "i": ["√≠", "√Æ", "√Ø"],
        "o": ["√≥", "√µ", "√¥", "√∂"],
        "u": ["√∫", "√ª", "√º"],
        "c": ["√ß"],
        "n": ["√±"],
        "s": ["√ü"],
        "y": ["√Ω", "√ø"],
        "z": ["≈æ"],
    }
    if letra_minuscula in palavra_minuscula and letra_minuscula not in inputs:
        inputs.append(letra_minuscula)
        inputs.sort()
        statusDaPalavra[letra_minuscula][0] = True
    if letra_minuscula in letras_variantes:
        for variante in letras_variantes[letra_minuscula]:
            if variante in palavra_minuscula:
                if letra_minuscula not in inputs:
                    inputs.append(letra_minuscula)
                    inputs.sort()
                statusDaPalavra[variante][0] = True
                break
            elif (
                variante == letras_variantes[letra_minuscula][-1]
                and letra_minuscula not in inputs
            ):
                inputs.append(letra_minuscula)
                inputs.sort()
                tentativas -= 1
                print(f"Tentativas restantes: {tentativas}")
    elif letra_minuscula not in inputs:
        inputs.append(letra_minuscula)
        inputs.sort()
        tentativas -= 1
        print(f"Tentativas restantes: {tentativas}")

    print(f"\nLetras j√° inseridas: {inputs}")

    return [tentativas, inputs]


def jogo(tentativas, partida, inputs):
    [dica, palavra] = escolherPalavra()
    statusDaPalavra = {letra.lower(): [False] for letra in palavra}
    for chave in statusDaPalavra:
        if not chave.isalnum():
            statusDaPalavra[chave][0] = True
    while partida == "em andamento":
        retorno = ""
        while True:
            desenharHominho(tentativas, partida)
            retorno = input(
                f"""Dica: {dica}
                            
Digite uma letra ou numeral se quiser salv√°-lo: """
            )
            print(
                "\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äîx‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äîx‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
            )
            if len(retorno) == 0:
                continue
            elif len(retorno) > 1:
                print("Digite apenas UMA letra ou n√∫mero.\n")
            else:
                break
        [tentativas, inputs] = checagem(
            tentativas, retorno, inputs, palavra, statusDaPalavra
        )
        print("\n")
        for letra in palavra:
            if statusDaPalavra[letra.lower()][0]:
                print(letra, end="")
            else:
                print("_", end="")
        print("\n")
        if all(statusDaPalavra[opcao][0] == True for opcao in statusDaPalavra):
            partida = "ganha"
            desenharHominho(tentativas, partida)
            break
        if tentativas <= 0:
            partida = "perdida"
            desenharHominho(tentativas, partida)
            break


jogo(tentativas, partida, inputs)
